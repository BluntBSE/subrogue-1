

DONT FORGET:
The invalid path to node bug at the project start is a known bug in Godot: https://github.com/godotengine/godot/issues/27790

You currently set speed pretty directly in apply_entity_type. You'll have to change this once different speeds are at hing.

We're making the find/attack target stuff generic to promote npc interactions,
but I think something like a "player bias" would be helpful, that is
skewing interactions towards interacting with the player vs npcs,
but not so much the player can't bamboozle the AI.

BUG: If you get lucky and click on a unit directly, you can get its proper identification right away. No!
BUG: Your control focus thing didn't really pan out.


CONSIDER:
Make the sonar width and heading controllable from inside the 3d gamespace?        
IDK YET: Give signals a heading sprite? Possibly as an upgrade
IDK YET: How long does positive ID last? - Give sonar signal objects a lifespan after a life ping before they do the C100 thing.
IF NEEDED TO IMPROVE PERFORMANCE: Maybe only turn on NPC "Brains" if a player wanders within some large distance. Kind of like an AI 'chunking' that way. 
IF NEEDED TO IMPROVE PERFORMANCE: All that ping polling and stuff could be on different threads. NPCs and players could use separate threads. Don't need to track OTHER player's signals either.

TODO:

    
        
    
    Filtering signals based on parameters
    
    -Add "MOVE" to the list of right click commands unless we can make it possible to pass
    input from the mesh that signals occupy


-A better cursor - DONE
-Docking at ports, getting missions
-Signal tuning
-Destroying enemies (done)
-Different graphics for munitions
-Configuring weapons
-Being at least pinged by an enemy (can fake)
-Dying explosively

    
    Debug Munition can find and hit targets.
    -Do depth, profile checks to track.
    -Do depth, profile checks to hit.
    It'd be great to show a cone in front of the munition
    Set up configuration parameters
QUEUE:
    1. Active ping now reveals. For how long?
    
    
    The ping:
    
    Detection:
        Any new contacts are added immediately
        Contacts have a central handle. They have a radius around them based on the current uncertainty.
        They spawn at a random offset, then *keep that offset and continue moving with the velocity of the entity they are bound to*
        
        After that, a pretty long (6s?) poll between updates.
        Players have a button or slider that can manually poll or increase poll rate.




IDEAS:
    
    MUNITIONS - Maybe we shouldn't add_child at runtime, but reveal munitions from an offscreen pool?
    MUNITIONS - DO THEY OVERRIDE THEIR CHECK WAYPOINT REACHED AND JUST KEEP GOING?

    
    Sounds (and other emissions) are achieved by creating a large 3d shape around the emitter,
    where the edge of the shape represents the smallest unit detectable (such as 1DB)
    This large 3D shape clips with the terrain.
    If an entity with a LISTENING flag is within the shape, it measures its distance from the emitter across the curve of the sphere.
    With that distance. Given the POWER of the signal and the SENSITIVITY of the listener, do the following:
    
    If Signal POWER is within the SENSITIVITY limit of the listener, create a SignalDetectedNode.
    
    Signal detected nodes do not positively identify the object, but provide a node to pathfind to. Perhaps some variance is introduced to the position of the node based on sensitivity.
    A SignalDetectedNode knows what it's parented to, so updates to a SignalDetectedNode are tracked to the object they belong to.
    
    
    For the player, the player must choose to save these nodes to the screen, else they disappear after a certain amount of time.
    
    
    
